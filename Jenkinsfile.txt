node{
        properties([pipelineTriggers([pollSCM('* * * * *')])])
        stage('checkout'){
            git url: 'https://github.com/prasha94/buildm.git'
            echo 'git checkout'
        }
        stage('build'){
            def mvnHome = tool 'maven'
            env.PATH = "${mvnHome}/bin:${env.PATH}"
            sh 'mvn -B clean verify'
            echo 'maven build'
        }
        stage('sonar analysis'){
			def mvnHome = tool 'maven'
			withSonarQubeEnv('sonar'){
				sh "${mvnHome}/bin/mvn sonar:sonar"
			}
		}
		stage('save-artifacts'){
		 archiveArtifacts artifacts: 'target/*.war'
            echo 'Archiving Completed'
		def server = Artifactory.server 'jfrog'
		def buildinfo = Artifactory.newBuildInfo()        
            
            server.bypassProxy = true
            server.username = 'admin'
            server.password = 'admin'
            server.connection.timeout = 300
	    def server = Artifactory.server 'jfrog'
def rtMaven = Artifactory.newMavenBuild()
rtMaven.resolver server: jfrog, releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot'
rtMaven.deployer server: jfrog, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local'
def buildInfo = rtMaven.run pom: 'buildm/pom.xml', goals: 'clean install'
                               
        }
        stage('deploy'){
            def userInput = input('Are you sure to Publish in prod?') 
            sh 'scp /var/lib/jenkins/workspace/original/target/*.war /apache-tomcat-7.0.92/webapps'
            echo 'deploying application'
        }
       
	
    }
